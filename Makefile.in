##
##  Makefile -- ePerl Makefile
##
@SET_MAKE@

# ------------------------------------------------
#   DEFINITIONS
# ------------------------------------------------

#   compiler tools
CC      = @CC@
AR      = @AR@
RANLIB  = @RANLIB@
CFLAGS  = -I. @CFLAGS@ 
LDFLAGS = -L. @LDFLAGS@
debug   = @debug@
dmalloc = @dmalloc@

#   installation tools
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR           = ./etc/mkinstalldirs

#   installation paths
prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = @bindir@
libdir          = @libdir@
mandir          = ${exec_prefix}/man
logfile         = @logfile@

#   Perl 5 language
perlprog      = @perlprog@
perlccflags   = -I@perlarch@/CORE
perlldflags   = -L@perlarch@/CORE -lperl @perllibs@
perldla       = @perldla@
perlccdlflags = @perlccdlflags@


# ------------------------------------------------
#   THE DEFAULT TARGETS
# ------------------------------------------------

all: config eperl eperl.1


# ------------------------------------------------
#   THE CONFIGURATION SUPPORT
# ------------------------------------------------

config: configure config_ac.h.in

configure: configure.in aclocal.m4 acconfig.h
	rm -f configure
	autoconf configure.in >configure
	chmod 770 configure

config_ac.h.in: configure.in acconfig.h
	rm -f config_ac.h.in
	autoheader configure.in >config_ac.h.in

# ------------------------------------------------
#   THE RELEASE STUFF
# ------------------------------------------------

_GETDISTINFO = \
    _version=`./etc/newvers -lc -d eperl_version.c`; \
    _date=`date '+%y%m%d_%H%M'`

_BUILDDIST = \
    echo "Creating tarball..."; \
    tar cvf - * |\
    tardy --user_number=1000  --user_name=rse \
          --group_number=1000 --group_name=en \
          --prefix=$${_distname} - |\
    gzip >$${_tarball}; \
    echo "Done"; \
    ls -l $${_tarball}

_NEWVERS = \
	./etc/newvers -lc -p ePerl $$OPT eperl_version.c; \
	V=`./etc/newvers -lc -D eperl_version.c`;\
	sed -e "s/Version .*(.*)/Version $$V/g" <README >README.n && mv README.n README

_UPDATEVERS = \
	V=`./etc/newvers -lc -d eperl_version.c`;\
	./etc/newvers -lc -p ePerl -r $$V eperl_version.c; \
	V=`./etc/newvers -lc -D eperl_version.c`;\
	sed -e "s/Version .*(.*)/Version $$V/g" <README >README.n && mv README.n README

release: distclean fixperm
	@$(_GETDISTINFO) \
    _distname="eperl-$${_version}"; \
    _tarball="/tmp/$${_distname}.tar.gz"; \
    echo "Release Distribution: ePerl Version $$_version"; \
    $(_BUILDDIST); \
    mv /tmp/$${_distname}.tar.gz $${_distname}.tar.gz 

snap: distclean fixperm
	@$(_GETDISTINFO) \
    _distname="eperl-$${_version}-SNAP-$$_date"; \
    _tarball="/tmp/$${_distname}.tar.gz"; \
    echo "Snap of whole source tree: ePerl Version $$_version as of $$_date"; \
    $(_BUILDDIST); \
    mv /tmp/$${_distname}.tar.gz $${_distname}.tar.gz 

new-version:
	OPT=-iv; $(_NEWVERS)

new-revision:
	OPT=-ir; $(_NEWVERS)

new-betalevel:
	OPT=-ib; $(_NEWVERS)

new-patchlevel:
	OPT=-ip; $(_NEWVERS)

new-release:
	OPT=-r$(R); $(_NEWVERS)

update-version:
	$(_UPDATEVERS)


# ------------------------------------------------
#   THE PROGRAM
# ------------------------------------------------

PROTO_SRCS = \
 eperl_main.c \
 eperl_perl5.c \
 eperl_parse.c \
 eperl_sys.c \
 eperl_http.c \
 eperl_getopt.c \
 eperl_log.c \
 eperl_debug.c \
 eperl_version.c \
 eperl_readme.c \
 eperl_license.c \
 eperl_logo.c

SRCS = \
 eperl_main.c \
 eperl_perl5.c \
 eperl_parse.c \
 eperl_sys.c \
 eperl_http.c \
 eperl_getopt.c \
 eperl_log.c \
 eperl_debug.c \
 eperl_version.c \
 eperl_readme.c \
 eperl_license.c \
 eperl_logo.c

OBJS = \
 eperl_main.o \
 eperl_perl5.o \
 eperl_parse.o \
 eperl_sys.o \
 eperl_http.o \
 eperl_getopt.o \
 eperl_log.o \
 eperl_debug.o \
 eperl_version.o \
 eperl_readme.o \
 eperl_license.o \
 eperl_logo.o

eperl: $(OBJS)
	$(CC) $(CFLAGS) $(perlccdlflags) -o eperl $(OBJS) $(LDFLAGS) $(dmalloc) $(perldla) $(perlldflags)
	@if [ "x$(debug)" = xoff ]; then \
		strip eperl; ls -l eperl; size eperl; \
	fi

eperl_main.o: eperl_main.c
	$(CC) $(CFLAGS) $(perlccflags) -c eperl_main.c

eperl_getopt.o: eperl_getopt.c
	$(CC) $(CFLAGS) -c eperl_getopt.c

eperl_parse.o: eperl_parse.c
	$(CC) $(CFLAGS) -c eperl_parse.c

eperl_log.o: eperl_log.c
	$(CC) $(CFLAGS) -c eperl_log.c

eperl_sys.o: eperl_sys.c
	$(CC) $(CFLAGS) -c eperl_sys.c

eperl_debug.o: eperl_debug.c
	$(CC) $(CFLAGS) -c eperl_debug.c

eperl_perl5.o: eperl_perl5.c
	$(CC) $(CFLAGS) $(perlccflags) -c eperl_perl5.c

eperl_http.o: eperl_http.c
	$(CC) $(CFLAGS) -c eperl_http.c

eperl_version.o: eperl_version.c
	$(CC) $(CFLAGS) -c eperl_version.c

eperl_readme.c: README
	./etc/asc2c README  eperl_readme  ePerl_README

eperl_readme.o: eperl_readme.c
	$(CC) $(CFLAGS) -c eperl_readme.c

eperl_license.c: LICENSE
	./etc/asc2c LICENSE eperl_license ePerl_LICENSE

eperl_license.o: eperl_license.c
	$(CC) $(CFLAGS) -c eperl_license.c

eperl_logo.c: eperl_logo.gif
	./etc/bin2c eperl_logo.gif eperl_logo ePerl_LOGO

eperl_logo.o: eperl_logo.c
	$(CC) $(CFLAGS) -c eperl_logo.c

mkproto:
	./etc/mkproto eperl_proto.h $(PROTO_SRCS)

fixperm:
	./etc/fixperm *

# ------------------------------------------------
#   THE DOCUMENTATION
# ------------------------------------------------

eperl.1: eperl.pod eperl_version.c
	V=`./etc/newvers -l c -D eperl_version.c`; \
	sed -e "s|\@V\@|$$V|g" -e "s|\@prefix\@|$(prefix)|" <eperl.pod >/tmp/eperl.pod; \
	pod2man --section=1 \
	        --center="Ralf S. Engelschall" \
			--release="EN" \
			/tmp/eperl.pod >eperl.1 && \
	rm -f /tmp/eperl.pod


# ------------------------------------------------
#   TEST SUITE
# ------------------------------------------------

test:
	@cd t; make test


# ------------------------------------------------
#   INSTALLATION
# ------------------------------------------------

install: all
	$(MKDIR) $(bindir)
	$(MKDIR) $(mandir)
	$(INSTALL_PROGRAM) eperl $(bindir)/eperl
	$(INSTALL_DATA) eperl.1 $(mandir)/eperl.1
	@if [ "x$(logfile)" != x ]; then \
		echo "$(MKDIR) `echo $(logfile) | sed -e 's%[^/]*$$%%'`; touch $(logfile)"; \
		$(MKDIR) `echo $(logfile) | sed -e 's%[^/]*$$%%'`; touch $(logfile); \
	fi

# ------------------------------------------------
#   CLEANUP
# ------------------------------------------------

clean:
	-rm -f $(OBJS)
	-rm -f eperl
	-rm -f core *.core

realclean:
	-@make clean
	-rm -f eperl.1
	-rm -f eperl_readme.[ch]
	-rm -f eperl_license.[ch]

distclean:
	-@make clean
	-rm -f config_ac.h config_sc.h
	-rm -f config.status config.cache config.log
	-rm -f Makefile
	-rm -f t/Makefile

##EOF##
