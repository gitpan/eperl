
  P O R T I N G

  ePerl was written with portability in mind. Additionally to overcome the
  system dependend characteristics ePerl uses a GNU autoconf based
  configuration scheme which tries hard to determine the information both from
  the installed Perl interpreter and from scratch via own GNU autoconf tests.

  So ePerl already compiles out-of-the-box on a lot of systems. At least the
  following Unix/Compiler/Perl variants were sucessfully tested by the author
  in the past:

  Operating System Compiler        Perl Interpreter Testhost    Time     ePerl
  ---------------- --------------- ---------------- ----------- -------- -----

  FreeBSD 2.1.5    GNU gcc 2.7.2.2 Perl 5.004       en1         always   latest
  Solaris 2.5      GNU gcc 2.7.2.1 Perl 5.003_95    sunti5      22.06.97 2.2.0
  SunOS 4.1.3      GNU gcc 2.7.2   Perl 5.003_95    sunbi1      ???      ???
  HP-UX 10.20      HP cc           Perl 5.004       hpeickel15  22.06.97 2.2.0
  IRIX 6.2         SGI cc          Perl 5.004       sgihalle13  22.06.97 2.2.0

  FreeBSD 2.1.5    GNU gcc 2.6.3   Perl 5.003       en1         30.05.97 2.2b4
  FreeBSD 2.2.1    GNU gcc 2.7.2.1 Perl 5.003       bsdti6      ???      ???
  FreeBSD 2.2.1    GNU gcc 2.7.2p  Perl 5.003_97h   en3         ???      ???
  Linux 2.0.18     GNU gcc 2.7.2   Perl 5.003_26    orlando     ???      ???
  Linux 2.0.27     GNU gcc 2.7.2.1 Perl 5.003_07    gw1         ???      ???
  Solaris 2.4      GNU gcc 2.7.2   Perl 5.003_02    sun2        ???      ???

  SunOS 4.1.3      GNU gcc 2.7.0   Perl 5.003_95    sunbi1      ???      ???
  SunOS 4.1.3_U1   GNU gcc 2.7.2   Perl 5.003_95    sunfi3      ???      ???


  HP-UX 10.20      GNU gcc 2.7.2.1 Perl 5.003_97i   hphalle5    20.04.07 2.1.1
  IRIX 5.3         SGI cc          Perl 5.003       xxxx        ???      ???

  If your Unix derivate is not on this list, don't panic. As we said, ePerl
  tries to determine the information itself, so there is a good chance that
  ePerl finds alternatives even for your system. At least for the compilation
  ePerl does a trick: It don't tries to find a reasonable compiler and
  reasonable flags for it. Instead it uses the one your Perl interpreter was
  compiled with. Because the Perl 5 Porters already tried hard to determine
  the best combination, so ePerl can only benefit from it.

  If it still fails to compile or run, first try to see where the problem
  resides. Usually problems can occur when you are using a brain-dead compiler
  or a too old Perl version. Try to upgrade or use better variants.

